{"ast":null,"code":"class Random {\n  constructor(max = 1000, allowNegative = true) {\n    this.max = max;\n    this.allowNegative = allowNegative;\n  }\n\n  randomInt(min, max) {\n    if (max > this.max) {\n      max = this.max;\n    }\n\n    if (min < 0 && !this.allowNegative) {\n      min = 0;\n    }\n\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n}\n\nexport const rando = new Random();\nconst shakespeareApi = \"https://api.graph.cool/simple/v1/shakespeare\";\n\nlet options = () => {\n  return {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      query: \"{\\n           allPoems(\\n               first: 1\\n               skip: \".concat(rando.randomInt(0, 160), \"\\n           ){\\n               title\\n               author\\n               lines\\n               text\\n           }\\n       }\")\n    })\n  };\n};","map":{"version":3,"sources":["/Users/alexstolzoff/Desktop/Projects/es6-editor/src/utils.js"],"names":["Random","constructor","max","allowNegative","randomInt","min","Math","ceil","floor","random","rando","shakespeareApi","options","method","headers","body","JSON","stringify","query"],"mappings":"AAAA,MAAMA,MAAN,CAAa;AAETC,EAAAA,WAAW,CAACC,GAAG,GAAG,IAAP,EAAaC,aAAa,GAAG,IAA7B,EAAmC;AAC1C,SAAKD,GAAL,GAAWA,GAAX;AACA,SAAKC,aAAL,GAAqBA,aAArB;AACH;;AAEDC,EAAAA,SAAS,CAACC,GAAD,EAAMH,GAAN,EAAW;AAChB,QAAIA,GAAG,GAAG,KAAKA,GAAf,EAAoB;AAChBA,MAAAA,GAAG,GAAG,KAAKA,GAAX;AACH;;AAED,QAAIG,GAAG,GAAG,CAAN,IAAW,CAAC,KAAKF,aAArB,EAAmC;AAC/BE,MAAAA,GAAG,GAAG,CAAN;AACH;;AACDA,IAAAA,GAAG,GAAGC,IAAI,CAACC,IAAL,CAAUF,GAAV,CAAN;AACAH,IAAAA,GAAG,GAAGI,IAAI,CAACE,KAAL,CAAWN,GAAX,CAAN;AACA,WAAOI,IAAI,CAACE,KAAL,CAAWF,IAAI,CAACG,MAAL,MAAiBP,GAAG,GAAGG,GAAN,GAAW,CAA5B,CAAX,IAA6CA,GAApD;AACH;;AAlBQ;;AAqBb,OAAO,MAAMK,KAAK,GAAG,IAAIV,MAAJ,EAAd;AAEP,MAAMW,cAAc,GAAG,8CAAvB;;AAEA,IAAIC,OAAO,GAAG,MAAM;AAChB,SAAO;AACHC,IAAAA,MAAM,EAAE,MADL;AAEPC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAFF;AAKPC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAClBC,MAAAA,KAAK,mFAGWR,KAAK,CAACN,SAAN,CAAgB,CAAhB,EAAkB,GAAlB,CAHX;AADa,KAAf;AALC,GAAP;AAqBH,CAtBD","sourcesContent":["class Random {\n    \n    constructor(max = 1000, allowNegative = true) {\n        this.max = max\n        this.allowNegative = allowNegative\n    }\n\n    randomInt(min, max) {\n        if (max > this.max) {\n            max = this.max\n        }\n\n        if (min < 0 && !this.allowNegative){\n            min = 0\n        }\n        min = Math.ceil(min)\n        max = Math.floor(max)\n        return Math.floor(Math.random() * (max - min +1)) + min\n    }\n}\n\nexport const rando = new Random()\n\nconst shakespeareApi = \"https://api.graph.cool/simple/v1/shakespeare\"\n\nlet options = () => {\n    return {\n        method: \"POST\",\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n       query: `{\n           allPoems(\n               first: 1\n               skip: ${rando.randomInt(0,160)}\n           ){\n               title\n               author\n               lines\n               text\n           }\n       }`\n    })\n    }\n    \n\n}\n"]},"metadata":{},"sourceType":"module"}