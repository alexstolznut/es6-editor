{"ast":null,"code":"import _objectSpread from \"/Users/alexstolzoff/Desktop/Projects/es6-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/alexstolzoff/Desktop/Projects/es6-editor/src/App.js\";\nimport React, { Component } from 'react';\nimport { Markup, Editor, Container, Column, Row, RuleInput, RuleLabel, StyleInput, Document, Button } from './styled';\nimport hljs from 'highlight.js';\nimport { rando } from './utils';\nconsole.log(rando);\nconsole.log(rando.color());\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editor: \"\",\n      name0: \"\",\n      begin0: \"\",\n      end0: \"\",\n      style0: \"\",\n      rules: 1\n    };\n\n    this.handleChange = event => {\n      let _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.newFields = () => {\n      this.setState(prevState => {\n        let rules = prevState.rules;\n        let fields = ['name', 'begin', 'end', 'style'];\n        let inputValues = {};\n        fields.forEach(field => {\n          inputValues = _objectSpread({}, inputValues, {\n            [\"\".concat(field).concat(rules)]: ''\n          });\n        });\n        rules++;\n        console.log(_objectSpread({\n          rules\n        }, inputValues));\n        return _objectSpread({\n          rules\n        }, inputValues);\n      });\n    };\n\n    this.convertToMarkup = (text = \"\") => {\n      return {\n        __html: hljs.highlightAuto(text).value\n      };\n    };\n\n    this.language = newRules => {\n      return () => ({\n        contains: [...newRules]\n      });\n    };\n\n    this.registerLanguage = state => {\n      let rules = state.rules;\n      let ruleObjects = [];\n\n      for (let i = 0; i < rules; i = i + 1) {\n        let newRule = {\n          className: state[\"name\".concat(i)],\n          begin: state[\"begin\".concat(i)],\n          end: state[\"end\".concat(i)]\n        };\n        let className = newRule.className,\n            begin = newRule.begin,\n            end = newRule.end;\n        console.log(className.length, begin.length, end.length);\n\n        if (className.length > 0 && begin.length > 0 && end.length > 0) {\n          begin = new RegExp(begin);\n          end = new RegExp(end);\n          ruleObjects.push(newRule);\n          console.log('success');\n        }\n      }\n\n      hljs.registerLanguage('language', this.language(ruleObjects));\n      hljs.configure({\n        languages: ['language']\n      });\n    };\n\n    this.prepareStyles = () => {\n      let rules = this.state.rules;\n      let styles = [];\n\n      for (let i = 0; i < rules; i = i + 1) {\n        styles.push(\"\\n        .hljs-\".concat(this.state['name' + i], \"{\\n          \").concat(this.state['style' + i], \"\\n        }\\n      \"));\n      }\n\n      let newStyles = \"\".concat(styles).replace(',', \"\");\n      console.log(newStyles);\n      return newStyles;\n    };\n  }\n\n  get rules() {\n    let rules = this.state.rules;\n    let array = [];\n    let fields = ['name', 'begin', 'end'];\n\n    for (let i = 0; i < rules; i = i + 1) {\n      array.push(React.createElement(Row, {\n        key: i,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Column, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, fields.map((field, index) => {\n        return React.createElement(Column, {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(RuleLabel, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, field), React.createElement(RuleInput, {\n          value: this.state[\"\".concat(field).concat(i)],\n          onChange: this.handleChange,\n          name: \"\".concat(field).concat(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }));\n      })), React.createElement(StyleInput, {\n        value: this.state[\"style\".concat(i)],\n        onChange: this.handleChange,\n        name: \"style\".concat(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })));\n    }\n\n    return array;\n  }\n\n  componentWillUpdate(nextProps, nextState) {\n    this.registerLanguage(nextState);\n    console.log(nextState);\n  }\n\n  render() {\n    let editor = this.state.editor; //object destructuring\n\n    let handleChange = this.handleChange,\n        newFields = this.newFields,\n        rules = this.rules,\n        convertToMarkup = this.convertToMarkup,\n        prepareStyles = this.prepareStyles;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, rules, React.createElement(Button, {\n      onClick: newFields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"New Rule\")), React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"Random Text\"), React.createElement(Document, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      name: \"editor\",\n      value: editor,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Markup, {\n      customStyles: prepareStyles(),\n      dangerouslySetInnerHTML: convertToMarkup(editor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexstolzoff/Desktop/Projects/es6-editor/src/App.js"],"names":["React","Component","Markup","Editor","Container","Column","Row","RuleInput","RuleLabel","StyleInput","Document","Button","hljs","rando","console","log","color","App","state","editor","name0","begin0","end0","style0","rules","handleChange","event","target","name","value","setState","newFields","prevState","fields","inputValues","forEach","field","convertToMarkup","text","__html","highlightAuto","language","newRules","contains","registerLanguage","ruleObjects","i","newRule","className","begin","end","length","RegExp","push","configure","languages","prepareStyles","styles","newStyles","concat","replace","array","map","index","componentWillUpdate","nextProps","nextState","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,SAAzB,EAAoCC,MAApC,EAA4CC,GAA5C,EAAiDC,SAAjD,EAA4DC,SAA5D,EAAuEC,UAAvE,EACQC,QADR,EACkBC,MADlB,QAC+B,UAD/B;AAEA,OAAOC,IAAP,MAAiB,cAAjB;AACA,SAASC,KAAT,QAAsB,SAAtB;AAEAC,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEAC,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,KAAN,EAAZ;;AAEA,MAAMC,GAAN,SAAkBhB,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BiB,KAF0B,GAElB;AACNC,MAAAA,MAAM,EAAE,EADF;AAENC,MAAAA,KAAK,EAAE,EAFD;AAGNC,MAAAA,MAAM,EAAE,EAHF;AAINC,MAAAA,IAAI,EAAE,EAJA;AAKNC,MAAAA,MAAM,EAAE,EALF;AAMNC,MAAAA,KAAK,EAAE;AAND,KAFkB;;AAAA,SAW1BC,YAX0B,GAWVC,KAAD,IAAW;AAAA,0BACFA,KAAK,CAACC,MADJ;AAAA,UACjBC,IADiB,iBACjBA,IADiB;AAAA,UACXC,KADW,iBACXA,KADW;AAEtB,WAAKC,QAAL,CAAc;AACZ,SAACF,IAAD,GAAQC;AADI,OAAd;AAGH,KAhByB;;AAAA,SAwD1BE,SAxD0B,GAwDd,MAAM;AAChB,WAAKD,QAAL,CAAgBE,SAAD,IAAe;AAAA,YACvBR,KADuB,GACdQ,SADc,CACvBR,KADuB;AAG5B,YAAIS,MAAM,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,EAAyB,OAAzB,CAAb;AACA,YAAIC,WAAW,GAAG,EAAlB;AACAD,QAAAA,MAAM,CAACE,OAAP,CAAiBC,KAAD,IAAW;AACzBF,UAAAA,WAAW,qBACNA,WADM;AAET,uBAAIE,KAAJ,SAAYZ,KAAZ,IAAsB;AAFb,YAAX;AAID,SALD;AAMAA,QAAAA,KAAK;AACLV,QAAAA,OAAO,CAACC,GAAR;AACES,UAAAA;AADF,WAEKU,WAFL;AAIA;AACEV,UAAAA;AADF,WAEKU,WAFL;AAID,OApBD;AAqBD,KA9EyB;;AAAA,SAgF1BG,eAhF0B,GAgFR,CAACC,IAAI,GAAG,EAAR,KAAe;AAC/B,aAAO;AACLC,QAAAA,MAAM,EAAE3B,IAAI,CAAC4B,aAAL,CAAmBF,IAAnB,EAAyBT;AAD5B,OAAP;AAGD,KApFyB;;AAAA,SAsF1BY,QAtF0B,GAsFdC,QAAD,IAAc;AACvB,aAAO,OAAO;AACVC,QAAAA,QAAQ,EAAE,CACR,GAAGD,QADK;AADA,OAAP,CAAP;AAKD,KA5FyB;;AAAA,SA8F1BE,gBA9F0B,GA8FN1B,KAAD,IAAW;AAAA,UACvBM,KADuB,GACdN,KADc,CACvBM,KADuB;AAE5B,UAAIqB,WAAW,GAAG,EAAlB;;AAEA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtB,KAApB,EAA2BsB,CAAC,GAAGA,CAAC,GAAG,CAAnC,EAAqC;AACnC,YAAIC,OAAO,GAAG;AACZC,UAAAA,SAAS,EAAE9B,KAAK,eAAQ4B,CAAR,EADJ;AAEZG,UAAAA,KAAK,EAAE/B,KAAK,gBAAS4B,CAAT,EAFA;AAGZI,UAAAA,GAAG,EAAEhC,KAAK,cAAO4B,CAAP;AAHE,SAAd;AADmC,YAM9BE,SAN8B,GAMLD,OANK,CAM9BC,SAN8B;AAAA,YAMnBC,KANmB,GAMLF,OANK,CAMnBE,KANmB;AAAA,YAMZC,GANY,GAMLH,OANK,CAMZG,GANY;AAOnCpC,QAAAA,OAAO,CAACC,GAAR,CAAYiC,SAAS,CAACG,MAAtB,EAA8BF,KAAK,CAACE,MAApC,EAA4CD,GAAG,CAACC,MAAhD;;AACA,YAAGH,SAAS,CAACG,MAAV,GAAmB,CAAnB,IAAwBF,KAAK,CAACE,MAAN,GAAe,CAAvC,IAA4CD,GAAG,CAACC,MAAJ,GAAa,CAA5D,EAA+D;AAC7DF,UAAAA,KAAK,GAAG,IAAIG,MAAJ,CAAWH,KAAX,CAAR;AACAC,UAAAA,GAAG,GAAG,IAAIE,MAAJ,CAAWF,GAAX,CAAN;AACAL,UAAAA,WAAW,CAACQ,IAAZ,CAAiBN,OAAjB;AACAjC,UAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD;AAEF;;AAEDH,MAAAA,IAAI,CAACgC,gBAAL,CAAsB,UAAtB,EAAkC,KAAKH,QAAL,CAAcI,WAAd,CAAlC;AACAjC,MAAAA,IAAI,CAAC0C,SAAL,CAAe;AACbC,QAAAA,SAAS,EAAC,CAAC,UAAD;AADG,OAAf;AAGD,KAvHyB;;AAAA,SA8H1BC,aA9H0B,GA8HV,MAAM;AAAA,UACfhC,KADe,GACN,KAAKN,KADC,CACfM,KADe;AAEpB,UAAIiC,MAAM,GAAG,EAAb;;AACA,WAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGtB,KAAnB,EAA0BsB,CAAC,GAAGA,CAAC,GAAG,CAAlC,EAAoC;AAClCW,QAAAA,MAAM,CAACJ,IAAP,2BACU,KAAKnC,KAAL,CAAW,SAAS4B,CAApB,CADV,0BAEM,KAAK5B,KAAL,CAAW,UAAU4B,CAArB,CAFN;AAKD;;AAED,UAAIY,SAAS,GAAG,GAAGC,MAAH,CAAUF,MAAV,EAAkBG,OAAlB,CAA0B,GAA1B,EAA+B,EAA/B,CAAhB;AACA9C,MAAAA,OAAO,CAACC,GAAR,CAAY2C,SAAZ;AACA,aAAOA,SAAP;AACD,KA5IyB;AAAA;;AAkB1B,MAAIlC,KAAJ,GAAY;AAAA,QACJA,KADI,GACM,KAAKN,KADX,CACJM,KADI;AAEV,QAAIqC,KAAK,GAAG,EAAZ;AACA,QAAI5B,MAAM,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,KAAlB,CAAb;;AAEA,SAAI,IAAIa,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGtB,KAAnB,EAA0BsB,CAAC,GAAGA,CAAC,GAAG,CAAlC,EAAoC;AAElCe,MAAAA,KAAK,CAACR,IAAN,CACE,oBAAC,GAAD;AACA,QAAA,GAAG,EAAEP,CADL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAGE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGb,MAAM,CAAC6B,GAAP,CAAW,CAAC1B,KAAD,EAAO2B,KAAP,KAAiB;AAC3B,eACE,oBAAC,MAAD;AACE,UAAA,GAAG,EAAEA,KADP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAY3B,KAAZ,CAHF,EAIE,oBAAC,SAAD;AACE,UAAA,KAAK,EAAE,KAAKlB,KAAL,WAAckB,KAAd,SAAsBU,CAAtB,EADT;AAEE,UAAA,QAAQ,EAAE,KAAKrB,YAFjB;AAGE,UAAA,IAAI,YAAKW,KAAL,SAAaU,CAAb,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAJF,CADF;AAYD,OAbA,CADH,CAHF,EAmBI,oBAAC,UAAD;AACE,QAAA,KAAK,EAAE,KAAK5B,KAAL,gBAAmB4B,CAAnB,EADT;AAEE,QAAA,QAAQ,EAAE,KAAKrB,YAFjB;AAGE,QAAA,IAAI,iBAAUqB,CAAV,CAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBJ,CADF;AA2BC;;AACD,WAAOe,KAAP;AACH;;AAmEDG,EAAAA,mBAAmB,CAACC,SAAD,EAAYC,SAAZ,EAAsB;AACvC,SAAKtB,gBAAL,CAAsBsB,SAAtB;AACApD,IAAAA,OAAO,CAACC,GAAR,CAAYmD,SAAZ;AACD;;AAkBDC,EAAAA,MAAM,GAAE;AAAA,QACDhD,MADC,GACS,KAAKD,KADd,CACDC,MADC,EAEN;;AAFM,QAGDM,YAHC,GAGiE,IAHjE,CAGDA,YAHC;AAAA,QAGaM,SAHb,GAGiE,IAHjE,CAGaA,SAHb;AAAA,QAGwBP,KAHxB,GAGiE,IAHjE,CAGwBA,KAHxB;AAAA,QAG+Ba,eAH/B,GAGiE,IAHjE,CAG+BA,eAH/B;AAAA,QAGgDmB,aAHhD,GAGiE,IAHjE,CAGgDA,aAHhD;AAIR,WACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACChC,KADD,EAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEO,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,CADF,EAOE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAE,QADR;AAEE,MAAA,KAAK,EAAEZ,MAFT;AAGE,MAAA,QAAQ,EAAEM,YAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAME,oBAAC,MAAD;AACE,MAAA,YAAY,EAAE+B,aAAa,EAD7B;AAEE,MAAA,uBAAuB,EAAEnB,eAAe,CAAClB,MAAD,CAF1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CAJF,CAPF,CADF;AA0BD;;AA5K2B;;AA+K5B,eAAeF,GAAf","sourcesContent":["import React, {Component} from 'react'\nimport { Markup, Editor, Container, Column, Row, RuleInput, RuleLabel, StyleInput, \n        Document, Button} from './styled'\nimport hljs from 'highlight.js'\nimport { rando } from './utils'\n\nconsole.log(rando)\n\nconsole.log(rando.color())\n\nclass App extends Component {\n\n  state = {\n    editor: \"\",\n    name0: \"\",\n    begin0: \"\",\n    end0: \"\",\n    style0: \"\",\n    rules: 1\n  }\n\n  handleChange = (event) => {\n      let {name, value} = event.target\n      this.setState({\n        [name]: value\n      })\n  }\n\n  get rules() {\n    let { rules } = this.state\n    let array = []\n    let fields = ['name', 'begin', 'end']\n\n    for(let i = 0; i < rules; i = i + 1){\n\n      array.push(\n        <Row\n        key={i}\n        >\n          <Column>\n            {fields.map((field,index) => {\n              return (\n                <Column\n                  key={index}\n                >\n                  <RuleLabel>{field}</RuleLabel>\n                  <RuleInput\n                    value={this.state[`${field}${i}`]}\n                    onChange={this.handleChange}\n                    name={`${field}${i}`}\n                  />\n                </Column>\n            )\n            })}\n          </Column>\n            <StyleInput\n              value={this.state[`style${i}`]}\n              onChange={this.handleChange}\n              name={`style${i}`}\n            />\n        </Row>\n      )\n      }\n      return array\n  }\n\n  newFields = () => {\n    this.setState( (prevState) => {\n      let {rules} = prevState\n      \n      let fields = ['name', 'begin', 'end', 'style']\n      let inputValues = {}\n      fields.forEach( (field) => {\n        inputValues = {\n          ...inputValues,\n          [`${field}${rules}`]: ''\n        }\n      });\n      rules++\n      console.log({\n        rules,\n        ...inputValues\n      })\n      return{\n        rules,\n        ...inputValues\n      }\n    })\n  }\n\n  convertToMarkup = (text = \"\") => {\n    return {\n      __html: hljs.highlightAuto(text).value\n    }\n  }\n\n  language = (newRules) => {\n    return () => ({\n        contains: [\n          ...newRules\n        ]\n    })\n  }\n\n  registerLanguage = (state) => {\n    let {rules} = state\n    let ruleObjects = []\n\n    for (let i = 0; i < rules; i = i + 1){\n      let newRule = {\n        className: state[`name${i}`],\n        begin: state[`begin${i}`],\n        end: state[`end${i}`]\n      }\n      let {className, begin, end} = newRule\n      console.log(className.length, begin.length, end.length)\n      if(className.length > 0 && begin.length > 0 && end.length > 0) {\n        begin = new RegExp(begin)\n        end = new RegExp(end)\n        ruleObjects.push(newRule)\n        console.log('success')\n      }\n      \n    }\n\n    hljs.registerLanguage('language', this.language(ruleObjects))\n    hljs.configure({\n      languages:['language']\n    })\n  }\n\n  componentWillUpdate(nextProps, nextState){\n    this.registerLanguage(nextState)\n    console.log(nextState)\n  }\n\n  prepareStyles = () => {\n    let {rules} = this.state\n    let styles = []\n    for(let i = 0; i < rules; i = i + 1){\n      styles.push(`\n        .hljs-${this.state['name' + i]}{\n          ${this.state['style' + i]}\n        }\n      `)\n    }\n\n    let newStyles = \"\".concat(styles).replace(',', \"\")\n    console.log(newStyles)\n    return newStyles\n  }\n\n  render(){\n    let {editor} = this.state\n    //object destructuring\n    let {handleChange, newFields, rules, convertToMarkup, prepareStyles} = this\n  return (\n    <Container>\n      <Column>\n      {rules}\n        <Button onClick={newFields}>\n         New Rule\n        </Button>\n      </Column>\n      <Column>\n        <Button>\n          Random Text\n        </Button>\n        <Document>\n          <Editor\n            name={\"editor\"}\n            value={editor}\n            onChange={handleChange}\n          />\n          <Markup\n            customStyles={prepareStyles()}\n            dangerouslySetInnerHTML={convertToMarkup(editor)}\n          />\n        </Document>\n      </Column>\n    </Container>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}