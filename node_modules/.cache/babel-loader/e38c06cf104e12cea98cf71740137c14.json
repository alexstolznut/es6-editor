{"ast":null,"code":"import _objectSpread from \"/Users/alexstolzoff/Desktop/Projects/es6-editor/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/alexstolzoff/Desktop/Projects/es6-editor/src/App.js\";\nimport React, { Component } from 'react';\nimport { Markup, Editor, Container, Column, Row, RuleInput, RuleLabel, StyleInput, Document, Button } from './styled';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editor: \"\",\n      name0: \"\",\n      begin0: \"\",\n      end0: \"\",\n      style0: \"\",\n      rules: 1\n    };\n\n    this.handleChange = event => {\n      let _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.rules = () => {\n      let rules = this.state.rules;\n      let array = [];\n      let fields = ['name', 'begin', 'end'];\n\n      for (let i = 0; i < rules; i = i + 1) {\n        array.push(React.createElement(Row, {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, React.createElement(Column, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, fields.map((field, index) => {\n          return React.createElement(Column, {\n            key: index,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(RuleLabel, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, field), React.createElement(RuleInput, {\n            value: this.state[\"\".concat(field).concat(i)],\n            onChange: this.handleChange,\n            name: \"\".concat(field).concat(i),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }));\n        })), React.createElement(StyleInput, {\n          value: this.state[\"style\".concat(i)],\n          onChange: this.handleChange,\n          name: \"style\".concat(i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        })));\n      }\n    };\n\n    this.newFields = () => {\n      this.setState(prevState => {\n        let rules = prevState.rules;\n        let fields = ['name', 'begin', 'end', 'style'];\n        let inputValues = {};\n        fields.forEach(field => {\n          inputValues = _objectSpread({}, inputValues, {\n            [\"\".concat(field).concat(rules)]: ''\n          });\n        });\n        rules++;\n        console.log(_objectSpread({\n          rules\n        }, inputValues));\n        return _objectSpread({\n          rules\n        }, inputValues);\n      });\n    };\n  }\n\n  render() {\n    let value = this.state.value; //object destructuring\n\n    let handleChange = this.handleChange,\n        newFields = this.newFields,\n        rules = this.rules;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, rules(), React.createElement(Button, {\n      onClick: newFields,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"New Rule\")), React.createElement(Column, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(Button, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Random Text\"), React.createElement(Document, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Editor, {\n      name: \"Editor\",\n      value: this.state.value,\n      onChange: handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }), React.createElement(Markup, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/alexstolzoff/Desktop/Projects/es6-editor/src/App.js"],"names":["React","Component","Markup","Editor","Container","Column","Row","RuleInput","RuleLabel","StyleInput","Document","Button","App","state","editor","name0","begin0","end0","style0","rules","handleChange","event","target","name","value","setState","array","fields","i","push","map","field","index","newFields","prevState","inputValues","forEach","console","log","render"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport { Markup, Editor, Container, Column, Row, RuleInput, RuleLabel, StyleInput, \n        Document, Button} from './styled'\n\n\nclass App extends Component {\n\n  state = {\n    editor: \"\",\n    name0: \"\",\n    begin0: \"\",\n    end0: \"\",\n    style0: \"\",\n    rules: 1\n  }\n\n  handleChange = (event) => {\n      let {name, value} = event.target\n      this.setState({\n        [name]: value\n      })\n  }\n\n  rules = () => {\n    let { rules } = this.state\n    let array = []\n    let fields = ['name', 'begin', 'end']\n\n    for(let i = 0; i < rules; i = i + 1){\n\n      array.push(\n        <Row\n        key={i}\n        >\n          <Column>\n            {fields.map((field,index) => {\n              return (\n                <Column\n                  key={index}\n                >\n                  <RuleLabel>{field}</RuleLabel>\n                  <RuleInput\n                    value={this.state[`${field}${i}`]}\n                    onChange={this.handleChange}\n                    name={`${field}${i}`}\n                  />\n                </Column>\n            )\n            })}\n          </Column>\n            <StyleInput\n              value={this.state[`style${i}`]}\n              onChange={this.handleChange}\n              name={`style${i}`}\n            />\n        </Row>\n      )\n      }\n  }\n\n  newFields = () => {\n    this.setState( (prevState) => {\n      let {rules} = prevState\n      \n      let fields = ['name', 'begin', 'end', 'style']\n      let inputValues = {}\n      fields.forEach( (field) => {\n        inputValues = {\n          ...inputValues,\n          [`${field}${rules}`]: ''\n        }\n      });\n      rules++\n      console.log({\n        rules,\n        ...inputValues\n      })\n      return{\n        rules,\n        ...inputValues\n      }\n    })\n  }\n\n  render(){\n    let {value} = this.state\n    //object destructuring\n    let {handleChange, newFields, rules} = this\n  return (\n    <Container>\n      <Column>\n      {rules()}\n        <Button onClick={newFields}>\n         New Rule\n        </Button>\n      </Column>\n      <Column>\n        <Button>\n          Random Text\n        </Button>\n        <Document>\n          <Editor\n            name={\"Editor\"}\n            value={this.state.value}\n            onChange={handleChange}\n          />\n          <Markup/>\n        </Document>\n      </Column>\n    </Container>\n  );\n}\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}